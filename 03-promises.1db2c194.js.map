{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIMQ,SAASC,cAAc,SAG/BC,iBAAiB,UAEtB,SAA4BC,GAC1BA,EAAEC,iBASF,IAPA,IAAMC,EAAYF,EAAEG,cAAcC,SAC5BC,EAAS,CACbhB,MAAOiB,OAAOJ,EAAUb,MAAMkB,OAC9BC,KAAMF,OAAOJ,EAAUM,KAAKD,OAC5BE,OAAQH,OAAOJ,EAAUO,OAAOF,QAGzBG,EAAI,EAAGA,GAAKL,EAAOI,OAAQC,GAAK,EACvCvB,EAAcuB,EAAGL,EAAOhB,OACrBsB,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjDgB,EAAOhB,MAAQgB,EAAOG,KAAOH,EAAOhB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('submit', promisesParameters);\n\nfunction promisesParameters(e) {\n  e.preventDefault();\n\n  const formValue = e.currentTarget.elements;\n  const values = {\n    delay: Number(formValue.delay.value),\n    step: Number(formValue.step.value),\n    amount: Number(formValue.amount.value),\n  };\n\n  for (let i = 1; i <= values.amount; i += 1) {\n    createPromise(i, values.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    values.delay = values.step + values.delay;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","formValue","currentTarget","elements","values","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1db2c194.js.map"}